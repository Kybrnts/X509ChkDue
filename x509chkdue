#!/bin/sh
#: Title       : X509chkdue
#: Date        : 2018-05-15
#: Author      : "Kybernetes" <correodelkybernetes@gmail.com>
#: Version     : 1.0.0
#: Description : Executable Dash shell script file
#:             : 
#: Options     : -c
#:             : -f
#:             : -h
#:             : -l
#:             : -V
#:             : -v
#:             : -t
##
## Includes --------------------------------------------------------------------
. /usr/lib/shutls1.0/core/strngutls || exit 1 ## Utilities for shell names
_PROCUTLS_CMD_MKFIFO=/usr/bin/mkfifo
. /usr/lib/shutls1.0/core/procutls || exit 1  ## Utilities for shell proccesses
_X509UTLS_CMD_OPENSSL=/usr/bin/openssl
. /usr/lib/shutls1.0/ossl/x509utls || exit 1  ## Openssl x509 scripting tools
##
## Constants -------------------------------------------------------------------
readonly _PRGNME="${0##*/}"
readonly _PRGVRS="1.00"
##
## -- Runtime config. ----------------------------------------------------------
_DFLCRTF=PEM   ## Default imput cert. format. Use PEM/pem, DER/der, NET/net.
_DFLVRLV=2     ## Default verbosity level. Use from 0 to 3
_DFLCHKT=86400 ## Default check due time. Use INT[s|min|h|d], "s" by default.
##
## Function declarations -------------------------------------------------------
_LOGMODE=false
stdout() { #@ DESCRIPTION:
           #@ USAGE:
    if $_LOGMODE; then
        sstdmsg "$_PRGNME:" ${1+"$@"}
    else
        stmpmsg "$_PRGNME:" ${1+"$@"}
    fi
}
wrnout() { #@ DESCRIPTION:
           #@ USAGE:
    if $_LOGMODE; then
        tmewrn ${1+"$@"}
    else
        serrmsg "$_PRGNME: $_STDIOUTLS_WRSTMP" ${1+"$@"}
    fi
}
errout() {
    if $_LOGMODE; then
        serrmsg "$_PRGNME:" ${1+"$@"}
    else
        stmperr "$_PRGNME:" ${1+"$@"}
    fi    
}
badSynExt() { #@ DESCRIPTION: Exits on 
              #@ USAGE:
    serrmsg "$_PRGNME:" ${1+"$@"}
    stdmsg "Use '$_PRGNME -h' to get help. QUITTING."
    exit 2
}
dsplyHlp() { #@ DESCRIPTION:
             #@ USAGE:
    local msg="$_PRGNME ($_PRGVRS) - Checks SSL certificate due date
Usage 
* Version mode   : $_PRGNME -V
* Help mode      : $_PRGNME -h
* STDIN mode     : $_PRGNME [ OPTIONS ]
* Cert. file mode: $_PRGNME [ OPTIONS ] -c FILENAME

Options
-c FILENAME      : Path to a ssl certificate file.
-f PEM|DER|NET   : Input certificate's format. If not used, PEM assumed.
-h               : Display this help message.
-l FILENAME      : Path to log file where to send STDOUT & STDERR.
-V               : Display version and exit
-v 0|1|2|3       : Verbosity level: Off, errors only, warnings/errors and all
                 : respectively. Default: 1 and  >3 is synonym for 3.
t INT[s|min|h|d] : Expected time before certificate due in seconds, minutes,
                 : hours or days respectively. If no suffix, 's' is assumed.

Status
Exit status will be 0 when certificate expires after specified due time. other-
wise 1. Status >1 is used for syntax or input/output errors.
"
    printf "%s" "$msg"
}
##
## -- Main ---------------------------------------------------------------------
main() {    
    # Local variables ("local" must be function's first statement)
    local crtn crtf hlpm logn vrsm vrlv chkt opt
    # Parse options
    while getopts :c:f:hl:Vv:t: opt; do
        case $opt in
            c)  ## Input cert file option specified
                isnul "$crtn" ||
                    badSynExt "\"$opt\" option can be used only once"
                crtn=$OPTARG ;;
            f)  ## Input cert format option specified
                isnul "$crtf" ||
                    badSynExt "\"$opt\" option can be used only once"
                crtf=$OPTARG ;;
            h)  ## Help mode option specified
                isnul "$hlpm" ||
                    badSynExt "\"$opt\" option can be used only once"
                hlpm=true ;;
            l)  ## Log file option specified
                isnul "$logn" ||
                    badSynExt "\"$opt\" option can be used only once"
                logn=$OPTARG ;;
            V)  ## Version mode option specified
                isnul "$vrsm" || 
                    badSynExt "\"$opt\" option can be used only once"
                vrsm=true ;;
            v)  ## Verbosity level option specified
                isnul "$vrlv" ||
                    badSynExt "\"$opt\" option can be used only once"
                vrlv=$OPTARG ;;
            t)  ## Check time option specified
                isnul "$chkt" ||
                    badSynExt "\"$opt\" option can be used only once"
                chkt=$OPTARG ;;
            :)  ## Missing option-argument
                badSynExt "Option \"$OPTARG\" requires an argument" ;;
            \?) ## Undefined option specified
                badSynExt "Invalid option: \"$OPTARG\"";;
        esac
    done
    if $vrsm; then
        dsplyVers
        return 0
    elif $hlpm; then
        dsplyHelp
        return 0
    fi
    dtemsg "+%Y/%m/%d %T" 

    if isnul "$crtf"; then
        :
    else
        :
    fi
    
    
}
##
## -- Run! ---------------------------------------------------------------------
main ${1+"$@"}
